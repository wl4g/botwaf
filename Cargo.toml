[workspace]
members = [
    "benchmarks",
    "src/common/audit-log",
    "src/common/macro",
    "src/common/makestruct",
    "src/common/mem-prof",
    "src/common/pprof",
    "src/common/telemetry",
    "src/cmd",
    "src/server",
    "src/updater",
    "src/verifier",
    "src/forwarder",
    "src/types",
    "src/utils",
]
resolver = "2"

[workspace.package]
version = "1.0.0"
authors = ["James Wong <jameswong1376@gmail.com>"]
repository = "https://github.com/wl4g/botwaf"
readme = "README.md"
license = "GPL-3.0"
description = "Botwaf - A Mini Open Source AI Bot WAF written in Rust."
keywords = ["AI", "Modsecurity", "Security", "WAF"]
edition = "2021"

[workspace.lints]
clippy.print_stdout = "warn"
clippy.print_stderr = "warn"
clippy.implicit_clone = "warn"
# clippy.dead_code = "allow"
rust.unknown_lints = "deny"

[workspace.dependencies]
# workspaces members.
common-audit-log = { path = "src/common/audit-log" }
common-error = { path = "src/common/error" }
common-macro = { path = "src/common/macro" }
common-makestruct = { path = "src/common/makestruct" }
common-mem-prof = { path = "src/common/mem-prof" }
common-pprof = { path = "src/common/pprof" }
common-telemetry = { path = "src/common/telemetry" }
botwaf-cmd = { path = "src/cmd" }
botwaf-server = { path = "src/server" }
botwaf-updater = { path = "src/updater" }
botwaf-verifier = { path = "src/verifier" }
botwaf-forwarder = { path = "src/forwarder" }
botwaf-types = { path = "src/types" }
botwaf-utils = { path = "src/utils" }

# Lang libs
regex = "1.11.1"
chrono = "0.4.40"
uuid = "1.9.1"
thiserror = "2.0.12"
anyhow = "1.0.97"
arc-swap = "1.7.1"
once_cell = "1.19.0"
sysinfo = "0.29.11"
base64 = "0.22.1"
hex = "0.4.3"
snafu = "0.8.5"
strum = { version = "0.25", features = ["derive"] }
mimalloc = "0.1.43"
local-ip-address = "0.6.1"
lazy_static = "1.4.0"
mac_address = "1.1.7"
url = "2.5.4"
eyre = "0.6.12"
humantime = "2.1"
humantime-serde = "1.1"

# Config libs
config = "0.14.0"
dotenv = "0.15.0"

# Command line libs
clap = "4.5.7"

# Serialization libs
serde = { version = "1.0.197", features = ["derive"] }
serde_json = "1.0.140"
serde_yaml = "0.9.32"
validator = { version = "0.20.0", features = ["derive"] }
# serde-wasm-bindgen = "0.6.5"
# wasm-bindgen = "0.2.93"

# Logger libs
env_logger = "0.11.3"
log = "0.4.22"

# Prometheus libs
prometheus = "0.14.0"
axum-prometheus = "0.8.0"

# Tracing libs.
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["json", "env-filter"] }
tracing-opentelemetry = "0.24.0"
tracing-futures = "0.2"
tracing-attributes = "0.1.26"
opentelemetry = "0.23.0"
opentelemetry_sdk = "0.23.0"
opentelemetry-otlp = "0.16.0"

# APM libs.
prost = "0.13"

# Async core libs
tokio = { version = "1.43.0", features = ["full", "signal"] }
tokio-cron-scheduler = { version = "0.13.0" }
async-trait = "0.1.88"
futures = "0.3"

# Web HTTP libs.
axum = { version = "0.8.3", features = ["multipart"] }
axum-macros = "0.5"
hyper = "1.6.0"
tower = "0.5.2"
tower-http = "0.5.2"
tower-cookies = "0.10.0"
globset = "0.4.14"
rust-embed = "8.5.0"
mime_guess = "2.0.4"
reqwest = "0.12.12"

# Database libs
mongodb = "3.0.1"
sqlx = { version = "0.8.3", features = ["sqlite", "postgres"] }
pgvector = { version = "0.4", features = ["postgres"] }

# Swagger/OpenAPI libs
utoipa = "5.3.1"
utoipa-swagger-ui = { version = "9.0.0", features = ["axum"] }
# utoipa-swagger-ui-vendored = { version = "0.1.2" }
openapi = "0.1.5"

# Auth libs
oauth2 = "4.3"
openidconnect = "3.5.0"
jsonwebtoken = "9.3.0"

# Encrypt libs
openssl = "0.10.64"
rsa = "0.9.6"
sha2 = "0.10.8"
ring = "0.17.14"

# Cache libs
moka = { version = "0.12.10", features = ["sync", "future"] }
redis = { version = "0.25.4", features = ["tokio-comp", "cluster-async"] }

# Ethers libs
ethers = "2.0.14"

# AI/ML libs
openai = "1.0.0"
langchain-rust = { version = "4.6.0", features = ["sqlite", "postgres"] }

# ModSecurity libs.
# Notice: If you use modsecurity-1.0.0, you must rely on libmodsecurity>=3.0.13. For Linux,
# see: /usr/lib/x86_64-linux-gnu/pkgconfig/modsecurity.pc. Rust-1.85 is the latest version of
# the default source of debian-12 and only supports libmodsecurity-3.0.9.
modsecurity = "0.1.2"

# Build dependencies
criterion = "0.4"

# [workspace.dev-dependencies]
# clippy = "0.1.85" # 0.0.302